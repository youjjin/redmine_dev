<%=
  current_user_ids = [User.current.id] + User.current.group_ids

  query = IssueQuery.new(:name => l("label_issue_status_plural")+" ("+l("default_issue_status_in_progress")+")", :user => User.current)
  query.add_filter "assigned_to_id", "=", current_user_ids
  query.add_filter "status_id", "o"
  query.column_names = settings[:columns].presence || ["status", "project", "tracker", "priority", "subject"]
  query.sort_criteria = settings[:sort].presence || [["status", "due_date", "desc"]]
  query.group_by = ["status"]
  issues = query.issues()

  statuss = {}
  issues.each do |issue|
    statuss[issue.status.name] = (statuss[issue.status.name] || []).push(issue)
  end

  label = []
  data = []
  statuss.keys.each do |status|
    label.push(status)
    data.push(statuss[status].length)
  end

  render :partial => "my/my_block_doughnut", :locals => {:id => 'bystatus', :query => query, :block => block, :labels => label, :datas => data}
%>